{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Icon from \"@expo/vector-icons/Feather\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport AccountScreen from \"../screens/AccountScreen/AccountScreen\";\nimport SettingsScreen from \"../screens/SettingScreen/SettingsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"Home\";\nvar accountName = \"Tài khoản\";\nvar settingsName = \"Cài đặt\";\nvar Tab = createBottomTabNavigator();\nvar SettingsStack = createNativeStackNavigator();\n\nfunction SettingssssssScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Settings Screen\"\n    }), _jsx(Button, {\n      title: \"Go to Profile\",\n      onPress: function onPress() {\n        return navigation.navigate('Profile');\n      }\n    })]\n  });\n}\n\nfunction ProfileScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Profile Screen\"\n    }), _jsx(Button, {\n      title: \"Go to Settings\",\n      onPress: function onPress() {\n        return navigation.navigate('Settings');\n      }\n    })]\n  });\n}\n\nfunction DetailsScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Button, {\n      title: \"Go to Details... again\",\n      onPress: function onPress() {\n        return navigation.push('Details');\n      }\n    })]\n  });\n}\n\nfunction MainContainer() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref4) {\n        var route = _ref4.route;\n        return {\n          tabBarActiveTintColor: '#020024',\n          tabBarInactiveTintColor: 'grey',\n          tabBarStyle: {\n            paddingBottom: 0,\n            fontSize: 10\n          },\n          tabBarShowLabel: false,\n          headerTitleAlign: 'center',\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var focused = _ref5.focused,\n                color = _ref5.color,\n                size = _ref5.size;\n            var iconName;\n            var rn = route.name;\n\n            if (rn === homeName) {\n              iconName = focused ? 'home' : 'home';\n            } else if (rn === accountName) {\n              iconName = focused ? 'user' : 'user';\n            } else if (rn === settingsName) {\n              iconName = focused ? 'settings' : 'settings';\n            }\n\n            return _jsx(Icon, {\n              name: iconName,\n              size: 23,\n              color: color\n            });\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: homeName,\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: accountName,\n        component: AccountScreen\n      }), _jsx(Tab.Screen, {\n        name: settingsName,\n        component: SettingsScreen,\n        children: function children() {\n          return _jsxs(SettingsStack.Navigator, {\n            children: [_jsx(Stack.Screen, {\n              name: \"Home\",\n              component: HomeScreen,\n              options: {\n                title: 'Awesome app'\n              }\n            }), _jsx(Stack.Screen, {\n              name: \"Profile\",\n              component: ProfileScreen,\n              options: {\n                title: 'My profile'\n              }\n            })]\n          });\n        }\n      })]\n    })\n  });\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["D:/Lukim/components/Tabar.js"],"names":["React","NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","Icon","HomeScreen","AccountScreen","SettingsScreen","homeName","accountName","settingsName","Tab","SettingsStack","SettingssssssScreen","navigation","flex","alignItems","justifyContent","navigate","ProfileScreen","DetailsScreen","push","MainContainer","route","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","paddingBottom","fontSize","tabBarShowLabel","headerTitleAlign","tabBarIcon","focused","color","size","iconName","rn","name","headerShown","title"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'; \r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Icon from 'react-native-vector-icons/Feather';\r\n\r\n// Screens\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport AccountScreen from '../screens/AccountScreen/AccountScreen';\r\nimport SettingsScreen from '../screens/SettingScreen/SettingsScreen';\r\n\r\n//Screen names\r\nconst homeName = \"Home\";\r\nconst accountName = \"Tài khoản\";\r\nconst settingsName = \"Cài đặt\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst SettingsStack = createNativeStackNavigator(); \r\nfunction SettingssssssScreen({ navigation }) {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Settings Screen</Text>\r\n      <Button\r\n        title=\"Go to Profile\"\r\n        onPress={() => navigation.navigate('Profile')}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction ProfileScreen({ navigation }) {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Profile Screen</Text>\r\n      <Button\r\n        title=\"Go to Settings\"\r\n        onPress={() => navigation.navigate('Settings')}\r\n      />\r\n    </View>\r\n  );\r\n}\r\nfunction DetailsScreen({ navigation }) {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Details Screen</Text>\r\n      <Button\r\n        title=\"Go to Details... again\"\r\n        onPress={() => navigation.push('Details')}\r\n      />\r\n    </View>\r\n  );\r\n}\r\nfunction MainContainer() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator \r\n      screenOptions={({ route }) => ({\r\n        tabBarActiveTintColor: '#020024',\r\n        tabBarInactiveTintColor: 'grey',\r\n        tabBarStyle: { paddingBottom: 0, fontSize: 10 }, \r\n        tabBarShowLabel: false ,  \r\n        headerTitleAlign: 'center',\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n          let rn = route.name;\r\n\r\n          if (rn === homeName) {\r\n            iconName = focused ? 'home' : 'home';\r\n\r\n          } else if (rn === accountName) {\r\n            iconName = focused ? 'user' : 'user';\r\n\r\n          } else if (rn === settingsName) {\r\n            iconName = focused ? 'settings' : 'settings';\r\n          } \r\n          return <Icon name={iconName} size={23} color={color} />;\r\n        },\r\n      })}>\r\n        <Tab.Screen  name={homeName} component={HomeScreen}  options={{headerShown: false}}>\r\n          {/* {() => (\r\n            <SettingsStack.Navigator>\r\n              <SettingsStack.Screen\r\n                name=\"Settings\"\r\n                component={SettingssssssScreen}\r\n              />\r\n              <SettingsStack.Screen name=\"Profile\" component={ProfileScreen} />\r\n            </SettingsStack.Navigator>\r\n          )} */}\r\n        </Tab.Screen>\r\n        <Tab.Screen  name={accountName} component={AccountScreen}>\r\n          {/* {() => (\r\n            <HomeStack.Navigator>\r\n              <HomeStack.Screen name=\"Home\" component={ProfileScreen} />\r\n              <HomeStack.Screen name=\"Details\" component={DetailsScreen} />\r\n            </HomeStack.Navigator>\r\n          )} */}\r\n        </Tab.Screen> \r\n        <Tab.Screen name={settingsName} component={SettingsScreen}>\r\n          {() => (\r\n            <SettingsStack.Navigator>\r\n               <Stack.Screen\r\n                    name=\"Home\"\r\n                    component={HomeScreen}\r\n                    options={{ title: 'Awesome app' }}\r\n                  />\r\n                  <Stack.Screen\r\n                    name=\"Profile\"\r\n                    component={ProfileScreen}\r\n                    options={{ title: 'My profile' }}\r\n                  />\r\n            </SettingsStack.Navigator>\r\n          )}\r\n          </Tab.Screen>\r\n      </Tab.Navigator> \r\n      \r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default MainContainer;"]},"metadata":{},"sourceType":"module"}