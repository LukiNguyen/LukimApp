{"ast":null,"code":"import * as React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { withTheme } from 'react-native-paper';\nimport Icon from \"@expo/vector-icons/Feather\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport AccountScreen from \"../screens/AccountScreen/AccountScreen\";\nimport SettingsScreen from \"../screens/SettingScreen/SettingsScreen\";\nimport ModeThemeScreen from \"../screens/SettingScreen/ModeThemeScreen\";\nimport LanguageChooseScreen from \"../screens/SettingScreen/LanguageChooseScreen\";\nimport Policy from \"../screens/SettingScreen/Policy\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"Home\";\nvar accountName = \"Tài khoản\";\nvar settingsName = \"Cài đặt\";\nvar Tab = createBottomTabNavigator();\nvar SettingsStack = createNativeStackNavigator();\n\nfunction MainContainer(props) {\n  var iconActive = props.theme.iconActive;\n  console.log(colors);\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarActiveTintColor: {\n          color: iconActive.text\n        },\n        tabBarInactiveTintColor: 'grey',\n        tabBarStyle: {\n          paddingBottom: 0,\n          fontSize: 10\n        },\n        tabBarShowLabel: false,\n        headerTitleAlign: 'center',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color;\n          var iconName;\n          var rn = route.name;\n\n          if (rn === homeName) {\n            iconName = focused ? 'home' : 'home';\n          } else if (rn === accountName) {\n            iconName = focused ? 'user' : 'user';\n          } else if (rn === settingsName) {\n            iconName = focused ? 'settings' : 'settings';\n          }\n\n          return _jsx(Icon, {\n            name: iconName,\n            size: 23,\n            color: color\n          });\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: homeName,\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: accountName,\n      component: AccountScreen\n    }), _jsx(Tab.Screen, {\n      name: settingsName,\n      options: {\n        headerShown: false\n      },\n      children: function children() {\n        return _jsxs(SettingsStack.Navigator, {\n          children: [_jsx(SettingsStack.Screen, {\n            name: \"Thông tin cài đặt\",\n            component: SettingsScreen,\n            options: {\n              headerTitleAlign: 'center'\n            }\n          }), _jsx(SettingsStack.Screen, {\n            name: \"Ng\\xF4n ng\\u1EEF\",\n            component: LanguageChooseScreen,\n            options: {\n              headerTitleAlign: 'center'\n            }\n          }), _jsx(SettingsStack.Screen, {\n            name: \"Hi\\u1EC3n th\\u1ECB\",\n            component: ModeThemeScreen,\n            options: {\n              headerTitleAlign: 'center'\n            }\n          }), _jsx(SettingsStack.Screen, {\n            name: \"Ch\\xEDnh s\\xE1ch\",\n            component: Policy,\n            options: {\n              headerTitleAlign: 'center'\n            }\n          })]\n        });\n      }\n    })]\n  });\n}\n\nexport default withTheme(MainContainer);","map":{"version":3,"sources":["D:/Lukim/components/Tabar.js"],"names":["React","createBottomTabNavigator","createNativeStackNavigator","withTheme","Icon","HomeScreen","AccountScreen","SettingsScreen","ModeThemeScreen","LanguageChooseScreen","Policy","homeName","accountName","settingsName","Tab","SettingsStack","MainContainer","props","iconActive","theme","console","log","colors","route","tabBarActiveTintColor","color","text","tabBarInactiveTintColor","tabBarStyle","paddingBottom","fontSize","tabBarShowLabel","headerTitleAlign","tabBarIcon","focused","iconName","rn","name","headerShown"],"mappings":"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","sourcesContent":["import * as React from 'react'; \r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'; \r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { withTheme } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/Feather';\r\n\r\n// Screens\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport AccountScreen from '../screens/AccountScreen/AccountScreen';\r\nimport SettingsScreen from '../screens/SettingScreen/SettingsScreen';\r\nimport ModeThemeScreen from '../screens/SettingScreen/ModeThemeScreen';\r\nimport LanguageChooseScreen from '../screens/SettingScreen/LanguageChooseScreen';\r\nimport Policy from '../screens/SettingScreen/Policy';\r\n\r\n//Screen names\r\nconst homeName = \"Home\";\r\nconst accountName = \"Tài khoản\";\r\nconst settingsName = \"Cài đặt\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst SettingsStack = createNativeStackNavigator();  \r\nfunction MainContainer(props) {\r\n  const { iconActive } = props.theme;\r\n  console.log(colors)\r\n  return ( \r\n      <Tab.Navigator \r\n      screenOptions={({ route }) => ({\r\n        tabBarActiveTintColor: {color:iconActive.text},\r\n        tabBarInactiveTintColor: 'grey',\r\n        tabBarStyle: { paddingBottom: 0, fontSize: 10 }, \r\n        tabBarShowLabel: false ,  \r\n        headerTitleAlign: 'center',\r\n        tabBarIcon: ({ focused, color }) => {\r\n          let iconName;\r\n          let rn = route.name;\r\n\r\n          if (rn === homeName) {\r\n            iconName = focused ? 'home' : 'home';\r\n\r\n          } else if (rn === accountName) {\r\n            iconName = focused ? 'user' : 'user';\r\n\r\n          } else if (rn === settingsName) {\r\n            iconName = focused ? 'settings' : 'settings';\r\n          } \r\n          return <Icon name={iconName} size={23} color={color} />;\r\n        },\r\n      })}>\r\n        <Tab.Screen name={homeName} component={HomeScreen}  options={{headerShown: false}}/> \r\n        <Tab.Screen name={accountName} component={AccountScreen}/>  \r\n        <Tab.Screen name={settingsName}  options={{headerShown: false}}>\r\n          {() => (\r\n            <SettingsStack.Navigator>\r\n              <SettingsStack.Screen\r\n                name={\"Thông tin cài đặt\"} \r\n                component={SettingsScreen}\r\n                options={{  headerTitleAlign: 'center', }}\r\n              />\r\n              <SettingsStack.Screen \r\n                name=\"Ngôn ngữ\" \r\n                component={LanguageChooseScreen}\r\n                options={{  headerTitleAlign: 'center', }} /> \r\n              <SettingsStack.Screen \r\n                name=\"Hiển thị\"  \r\n                component={ModeThemeScreen}\r\n                options={{  headerTitleAlign: 'center', }} />\r\n              <SettingsStack.Screen \r\n                name=\"Chính sách\" \r\n                component={Policy}\r\n                options={{  headerTitleAlign: 'center', }} />\r\n            </SettingsStack.Navigator>\r\n          )}\r\n          </Tab.Screen>\r\n      </Tab.Navigator>  \r\n  );\r\n}\r\n\r\nexport default withTheme(MainContainer);"]},"metadata":{},"sourceType":"module"}