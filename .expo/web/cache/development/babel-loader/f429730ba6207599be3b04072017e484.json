{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useMemo } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AuthContext } from \"./screens/UserConfirm/Context\";\nimport RootScreen from \"./screens/UserConfirm/RootScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Tabar from \"./components/Tabar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn() {\n        setUserToken('sdfsdff');\n        setIsLoading(false);\n      },\n      signUp: function signUp() {\n        setUserToken(null);\n        setIsLoading(false);\n      },\n      signOut: function signOut() {\n        setUserToken('sdfsdff');\n        setIsLoading(false);\n      }\n    };\n  });\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  if (isLoading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#1b242d\"\n      })\n    });\n  }\n\n  return _jsx(AuthContext.Provider, {\n    value: authContext,\n    children: _jsxs(NavigationContainer, {\n      children: [\"t\", _jsx(RootScreen, {})]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  margintabbar: {}\n});","map":{"version":3,"sources":["D:/Lukim/App.js"],"names":["useState","useEffect","useMemo","NavigationContainer","AuthContext","RootScreen","HomeScreen","Tabar","App","isLoading","setIsLoading","userToken","setUserToken","authContext","signIn","signUp","signOut","setTimeout","flex","justifyContent","alignItems","styles","StyleSheet","create","margintabbar"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SACEC,mBADF,QAEO,0BAFP;;;;AAIA,SAASC,WAAT;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;;;AACA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAiCR,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOS,SAAP;AAAA,MAAiBC,YAAjB;;AACA,mBAAiCV,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAiBC,YAAjB;;AACA,MAAMC,WAAW,GAAGX,OAAO,CAAC;AAAA,WAAO;AACjCY,MAAAA,MAAM,EAAE,kBAAM;AACZF,QAAAA,YAAY,CAAC,SAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJgC;AAKjCK,MAAAA,MAAM,EAAE,kBAAM;AACZH,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OARgC;AASjCM,MAAAA,OAAO,EAAE,mBAAM;AACbJ,QAAAA,YAAY,CAAC,SAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AAZgC,KAAP;AAAA,GAAD,CAA3B;AAcAT,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,UAAU,CAAC,YAAM;AACfP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFS,EAER,IAFQ,CAAV;AAGD,GAJQ,EAIP,EAJO,CAAT;;AAKA,MAAID,SAAJ,EAAgB;AACd,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACS,QAAAA,IAAI,EAAC,CAAN;AAAQC,QAAAA,cAAc,EAAC,QAAvB;AAAgCC,QAAAA,UAAU,EAAC;AAA3C,OAAb;AAAA,gBACE,KAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAiC,QAAA,KAAK,EAAC;AAAvC;AADF,MADF;AAKD;;AACD,SACE,KAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEP,WAA7B;AAAA,cACE,MAAC,mBAAD;AAAA,sBACE,KAAC,UAAD,KADF;AAAA;AADF,IADF;AAOD;AACD,IAAMQ,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,YAAY,EAAE;AADiB,CAAlB,CAAf","sourcesContent":["import { useState, useEffect,useMemo } from 'react'\nimport { \n  NavigationContainer,  \n} from '@react-navigation/native';\nimport { View,StyleSheet,ActivityIndicator } from 'react-native';\nimport { AuthContext } from './screens/UserConfirm/Context';\nimport RootScreen from './screens/UserConfirm/RootScreen';\nimport HomeScreen from './screens/HomeScreen'\nimport Tabar from \"./components/Tabar\";\nexport default function App() {\n  const [isLoading,setIsLoading] = useState(true)\n  const [userToken,setUserToken] = useState(null) \n  const authContext = useMemo(() => ({\n    signIn: () => {\n      setUserToken('sdfsdff')\n      setIsLoading(false)\n    },\n    signUp: () => {\n      setUserToken(null)\n      setIsLoading(false)\n    },\n    signOut: () => {\n      setUserToken('sdfsdff')\n      setIsLoading(false)\n    },\n  }))\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false)\n    },1000)\n  },[])\n  if( isLoading ) {\n    return(\n      <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n        <ActivityIndicator size=\"large\"  color=\"#1b242d\"/>\n      </View>\n    );\n  }\n  return (  \n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer >t\n        <RootScreen/> \n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n} \nconst styles = StyleSheet.create({ \n  margintabbar: { \n  }\n});\n"]},"metadata":{},"sourceType":"module"}