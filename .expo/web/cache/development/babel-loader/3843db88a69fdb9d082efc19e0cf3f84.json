{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar Storage = function Storage(userInfor) {\n  return _regeneratorRuntime.async(function Storage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userInfor));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar checkStorageUser = function checkStorageUser(target) {\n  var userToken;\n  return _regeneratorRuntime.async(function checkStorageUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          userToken = null;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(target));\n\n        case 4:\n          userToken = _context2.sent;\n          _context2.next = 10;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 10:\n          return _context2.abrupt(\"return\", userToken);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 7]], Promise);\n};\n\nvar dataUser = ['lukim', 'admin'];\n\nvar UserActions = function UserActions(prevState, action) {\n  switch (action.type) {\n    case 'RETRIEVE_TOKEN':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        isLoading: true\n      });\n\n    case 'LOGIN':\n      Storage(action.payload.userName);\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        userName: action.payload.userName,\n        passWord: action.payload.passWord,\n        isLoading: false,\n        isUser: true\n      });\n\n    case 'LOGOUT':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        userName: null,\n        userToken: null,\n        isLoading: false\n      });\n\n    case 'REGISTER':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        userName: prevState.userName,\n        userToken: prevState.token,\n        isLoading: false\n      });\n\n    case 'REDIRECT_USER':\n      checkStorageUser('userToken').then(function (data) {\n        if (data) {}\n\n        ;\n      });\n\n      if (checkStorageUser('userToken')) {\n        console.log('userToken', userStorage);\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isLoading: false,\n          isUser: true\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          passWord: null,\n          isLoading: false,\n          isUser: false\n        });\n      }\n\n    default:\n      return prevState;\n  }\n};\n\nexport { UserActions, checkStorageUser, Storage };","map":{"version":3,"sources":["D:/Lukim/actions/UserActions.js"],"names":["AsyncStorage","Storage","userInfor","setItem","console","log","checkStorageUser","target","userToken","getItem","dataUser","UserActions","prevState","action","type","isLoading","payload","userName","passWord","isUser","token","then","data","userStorage"],"mappings":";;;;;;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFF,YAAY,CAACG,OAAb,CAAqB,WAArB,EAAkCD,SAAlC,CAFE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIRE,UAAAA,OAAO,CAACC,GAAR;;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAOA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,UAAAA,SADiB,GACL,IADK;AAAA;AAAA;AAAA,2CAGCR,YAAY,CAACS,OAAb,CAAqBF,MAArB,CAHD;;AAAA;AAGjBC,UAAAA,SAHiB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKjBJ,UAAAA,OAAO,CAACC,GAAR;;AALiB;AAAA,4CAOdG,SAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AASA,IAAME,QAAQ,GAAG,CAAC,OAAD,EAAS,OAAT,CAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAYC,MAAZ,EAAuB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AACI,6CACGF,SADH;AAGAG,QAAAA,SAAS,EAAE;AAHX;;AAKJ,SAAK,OAAL;AACId,MAAAA,OAAO,CAACY,MAAM,CAACG,OAAP,CAAeC,QAAhB,CAAP;AACA,6CACGL,SADH;AAEAK,QAAAA,QAAQ,EAACJ,MAAM,CAACG,OAAP,CAAeC,QAFxB;AAGAC,QAAAA,QAAQ,EAAEL,MAAM,CAACG,OAAP,CAAeE,QAHzB;AAIAH,QAAAA,SAAS,EAAE,KAJX;AAKAI,QAAAA,MAAM,EAAC;AALP;;AAOJ,SAAK,QAAL;AACI,6CACGP,SADH;AAEAK,QAAAA,QAAQ,EAAE,IAFV;AAGAT,QAAAA,SAAS,EAAE,IAHX;AAIAO,QAAAA,SAAS,EAAE;AAJX;;AAMJ,SAAK,UAAL;AACI,6CACGH,SADH;AAEAK,QAAAA,QAAQ,EAAEL,SAAS,CAACK,QAFpB;AAGAT,QAAAA,SAAS,EAAEI,SAAS,CAACQ,KAHrB;AAIAL,QAAAA,SAAS,EAAE;AAJX;;AAMJ,SAAK,eAAL;AACIT,MAAAA,gBAAgB,CAAC,WAAD,CAAhB,CAA8Be,IAA9B,CAAmC,UAAAC,IAAI,EAAI;AACvC,YAAGA,IAAH,EAAS,CAER;;AAAA;AACJ,OAJD;;AAKA,UAAGhB,gBAAgB,CAAC,WAAD,CAAnB,EAAkC;AAC9BF,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBkB,WAAxB;AACA,+CACOX,SADP;AAEIG,UAAAA,SAAS,EAAE,KAFf;AAGII,UAAAA,MAAM,EAAC;AAHX;AAKH,OAPD,MAQK;AACD,+CACOP,SADP;AAEIK,UAAAA,QAAQ,EAAE,IAFd;AAGIC,UAAAA,QAAQ,EAAE,IAHd;AAIIH,UAAAA,SAAS,EAAE,KAJf;AAKII,UAAAA,MAAM,EAAC;AALX;AAOH;;AACL;AACI,aAAOP,SAAP;AAtDR;AAwDD,CAzDH;;AA2DA,SAAQD,WAAR,EAAoBL,gBAApB,EAAqCL,OAArC","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage'\r\nconst Storage = async (userInfor) => {   \r\n    try {\r\n        await AsyncStorage.setItem('userToken', userInfor);\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n} \r\nconst checkStorageUser = async (target) => {   \r\n    let userToken = null; \r\n    try {\r\n        userToken = await AsyncStorage.getItem(target);\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n    return userToken;\r\n}\r\nconst dataUser = ['lukim','admin']\r\n\r\nconst UserActions = (prevState, action) => {\r\n    switch( action.type ) {\r\n        case 'RETRIEVE_TOKEN': \r\n            return {\r\n            ...prevState, \r\n            // Handle Token is here\r\n            isLoading: true,\r\n        };\r\n        case 'LOGIN':\r\n            Storage(action.payload.userName)\r\n            return {\r\n            ...prevState,\r\n            userName:action.payload.userName,\r\n            passWord: action.payload.passWord, \r\n            isLoading: false,\r\n            isUser:true, \r\n        };\r\n        case 'LOGOUT': \r\n            return {\r\n            ...prevState,\r\n            userName: null,\r\n            userToken: null,\r\n            isLoading: false,\r\n        };\r\n        case 'REGISTER': \r\n            return {\r\n            ...prevState,\r\n            userName: prevState.userName,\r\n            userToken: prevState.token,\r\n            isLoading: false,\r\n        };\r\n        case 'REDIRECT_USER':  \r\n            checkStorageUser('userToken').then(data => {\r\n                if(data) {\r\n                    \r\n                };\r\n            })\r\n            if(checkStorageUser('userToken')) {\r\n                console.log('userToken',userStorage)\r\n                return {\r\n                    ...prevState,\r\n                    isLoading: false,\r\n                    isUser:true,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    ...prevState,\r\n                    userName: null,\r\n                    passWord: null, \r\n                    isLoading: false,\r\n                    isUser:false,\r\n                };\r\n            } \r\n        default:\r\n            return prevState\r\n    }\r\n  };\r\n\r\nexport {UserActions,checkStorageUser,Storage}"]},"metadata":{},"sourceType":"module"}