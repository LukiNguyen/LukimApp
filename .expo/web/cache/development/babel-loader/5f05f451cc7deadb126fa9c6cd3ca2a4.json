{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useMemo, useReducer } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport UserProvider from \"./screens/UserConfirm/Context\";\nimport { useUserActions } from \"./hook/useUserActionsContext\";\nimport RootScreen from \"./screens/UserConfirm/RootScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Tabar from \"./components/Tabar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useUserActions = useUserActions(),\n      checkUserLogin = _useUserActions.checkUserLogin,\n      login = _useUserActions.login;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  useEffect(function () {\n    console.log(typeof login(\"PK\"));\n  }, []);\n\n  if (true) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#1b242d\"\n      })\n    });\n  }\n\n  return _jsx(UserProvider, {\n    children: checkUserLogin !== null ? _jsx(Tabar, {}) : _jsx(NavigationContainer, {\n      children: _jsx(RootScreen, {})\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  margintabbar: {}\n});","map":{"version":3,"sources":["D:/Lukim/App.js"],"names":["useState","useEffect","useMemo","useReducer","NavigationContainer","UserProvider","useUserActions","RootScreen","HomeScreen","Tabar","App","checkUserLogin","login","isLoading","setIsLoading","userToken","setUserToken","console","log","flex","justifyContent","alignItems","styles","StyleSheet","create","margintabbar"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA6BC,OAA7B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SACEC,mBADF,QAEO,0BAFP;;;;AAIA,OAAOC,YAAP;AACA,SAASC,cAAT;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;;AACA,eAAe,SAASC,GAAT,GAAe;AAE5B,wBAAiCJ,cAAc,EAA/C;AAAA,MAAQK,cAAR,mBAAQA,cAAR;AAAA,MAAuBC,KAAvB,mBAAuBA,KAAvB;;AAGA,kBAAiCZ,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOa,SAAP;AAAA,MAAiBC,YAAjB;;AACA,mBAAiCd,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOe,SAAP;AAAA,MAAiBC,YAAjB;;AAEAf,EAAAA,SAAS,CAAC,YAAM;AAIdgB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAON,KAAK,CAAC,IAAD,CAAxB;AACD,GALQ,EAKN,EALM,CAAT;;AAMA,MAAI,IAAJ,EAAW;AACT,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACO,QAAAA,IAAI,EAAC,CAAN;AAAQC,QAAAA,cAAc,EAAC,QAAvB;AAAgCC,QAAAA,UAAU,EAAC;AAA3C,OAAb;AAAA,gBACE,KAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAiC,QAAA,KAAK,EAAC;AAAvC;AADF,MADF;AAKD;;AACD,SACE,KAAC,YAAD;AAAA,cAEIV,cAAc,KAAK,IAAnB,GACE,KAAC,KAAD,KADF,GAIA,KAAC,mBAAD;AAAA,gBACA,KAAC,UAAD;AADA;AANJ,IADF;AAaD;AACD,IAAMW,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,YAAY,EAAE;AADiB,CAAlB,CAAf","sourcesContent":["import { useState, useEffect,useMemo,useReducer } from 'react'\nimport { \n  NavigationContainer,  \n} from '@react-navigation/native';\nimport { View,StyleSheet,ActivityIndicator } from 'react-native';\nimport UserProvider from './screens/UserConfirm/Context';  \nimport { useUserActions } from './hook/useUserActionsContext'; \nimport RootScreen from './screens/UserConfirm/RootScreen';\nimport HomeScreen from './screens/HomeScreen'\nimport Tabar from \"./components/Tabar\";\nexport default function App() {\n  \n  const { checkUserLogin,login } = useUserActions()\n  \n\n  const [isLoading,setIsLoading] = useState(true)\n  const [userToken,setUserToken] = useState(null) \n  \n  useEffect(() => {\n    // setTimeout(async() => {\n    //   checkUserLogin()\n    // }, 1000);\n    console.log(typeof(login(\"PK\")))\n  }, []);\n  if( true ) {\n    return(\n      <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n        <ActivityIndicator size=\"large\"  color=\"#1b242d\"/>\n      </View>\n    );\n  }\n  return (  \n    <UserProvider>\n      \n      { checkUserLogin !== null ? (\n          <Tabar />\n      )\n      :\n        <NavigationContainer >\n        <RootScreen/> \n      </NavigationContainer>\n    }\n    </UserProvider>\n  );\n} \nconst styles = StyleSheet.create({ \n  margintabbar: { \n  }\n});\n"]},"metadata":{},"sourceType":"module"}