{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Carousel, { ParallaxImage } from 'react-native-snap-carousel';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ENTRIES1 = [{\n  illustration: 'https://png.pngtree.com/png-vector/20200319/ourlarge/pngtree-cryptocurrency-mining-concept-with-people-working-mining-bitcoins-digital-currency-investment-png-image_2157968.jpg'\n}, {\n  illustration: 'https://thumbs.dreamstime.com/b/print-213886566.jpg'\n}, {\n  illustration: 'https://i.imgur.com/KZsmUi2l.jpg'\n}, {\n  illustration: 'https://i.imgur.com/2nCt3Sbl.jpg'\n}];\n\nvar _Dimensions$get = Dimensions.get('window'),\n    screenWidth = _Dimensions$get.width;\n\nvar MyCarousel = function MyCarousel(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      entries = _useState2[0],\n      setEntries = _useState2[1];\n\n  var carouselRef = useRef(null);\n\n  var goForward = function goForward() {\n    carouselRef.current.snapToNext();\n  };\n\n  useEffect(function () {\n    setEntries(ENTRIES1);\n  }, []);\n\n  var renderItem = function renderItem(_ref, parallaxProps) {\n    var item = _ref.item,\n        index = _ref.index;\n    return _jsx(View, {\n      style: styles.item,\n      children: _jsx(ParallaxImage, _objectSpread({\n        source: {\n          uri: item.illustration\n        },\n        containerStyle: styles.imageContainer,\n        style: styles.image,\n        parallaxFactor: 0.4\n      }, parallaxProps))\n    });\n  };\n\n  return _jsx(Carousel, {\n    ref: carouselRef,\n    sliderWidth: screenWidth,\n    sliderHeight: 150,\n    itemWidth: screenWidth - 30,\n    data: entries,\n    loop: true,\n    renderItem: renderItem,\n    hasParallaxImages: true\n  });\n};\n\nexport default MyCarousel;\nvar styles = StyleSheet.create({\n  item: {\n    width: screenWidth - 30,\n    height: 150\n  },\n  imageContainer: {\n    flex: 1,\n    marginBottom: Platform.select({\n      ios: 0,\n      android: 1\n    }),\n    borderRadius: 20\n  },\n  image: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    resizeMode: 'cover'\n  })\n});","map":{"version":3,"sources":["D:/Lukim/components/SliderCarousel.js"],"names":["React","useRef","useState","useEffect","Carousel","ParallaxImage","ENTRIES1","illustration","Dimensions","get","screenWidth","width","MyCarousel","props","entries","setEntries","carouselRef","goForward","current","snapToNext","renderItem","parallaxProps","item","index","styles","uri","imageContainer","image","StyleSheet","create","height","flex","marginBottom","Platform","select","ios","android","borderRadius","absoluteFillObject","resizeMode"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,OAAOC,QAAP,IAAkBC,aAAlB,QAAsC,4BAAtC;;;;;;AAQA,IAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,YAAY,EAAE;AADhB,CADe,EAIf;AACEA,EAAAA,YAAY,EAAE;AADhB,CAJe,EAOf;AACEA,EAAAA,YAAY,EAAE;AADhB,CAPe,EAUf;AACEA,EAAAA,YAAY,EAAE;AADhB,CAVe,CAAjB;;AAcA,sBAA6BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA7B;AAAA,IAAcC,WAAd,mBAAOC,KAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1B,kBAA8BX,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOY,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,WAAW,GAAGf,MAAM,CAAC,IAAD,CAA1B;;AAEA,MAAMgB,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBD,IAAAA,WAAW,CAACE,OAAZ,CAAoBC,UAApB;AACD,GAFD;;AAIAhB,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,UAAU,CAACT,QAAD,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMc,UAAU,GAAG,SAAbA,UAAa,OAAgBC,aAAhB,EAAkC;AAAA,QAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,QAA1BC,KAA0B,QAA1BA,KAA0B;AACnD,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACF,IAApB;AAAA,gBACE,KAAC,aAAD;AACE,QAAA,MAAM,EAAE;AAACG,UAAAA,GAAG,EAAEH,IAAI,CAACf;AAAX,SADV;AAEE,QAAA,cAAc,EAAEiB,MAAM,CAACE,cAFzB;AAGE,QAAA,KAAK,EAAEF,MAAM,CAACG,KAHhB;AAIE,QAAA,cAAc,EAAE;AAJlB,SAKMN,aALN;AADF,MADF;AAWD,GAZD;;AAcA,SACI,KAAC,QAAD;AACE,IAAA,GAAG,EAAEL,WADP;AAEE,IAAA,WAAW,EAAEN,WAFf;AAGE,IAAA,YAAY,EAAE,GAHhB;AAIE,IAAA,SAAS,EAAEA,WAAW,GAAG,EAJ3B;AAKE,IAAA,IAAI,EAAEI,OALR;AAME,IAAA,IAAI,EAAE,IANR;AAOE,IAAA,UAAU,EAAEM,UAPd;AAQE,IAAA,iBAAiB,EAAE;AARrB,IADJ;AAYD,CAtCD;;AAwCA,eAAeR,UAAf;AAEA,IAAMY,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,IAAI,EAAE;AACJX,IAAAA,KAAK,EAAED,WAAW,GAAG,EADjB;AAEJoB,IAAAA,MAAM,EAAE;AAFJ,GADyB;AAK/BJ,EAAAA,cAAc,EAAE;AACdK,IAAAA,IAAI,EAAE,CADQ;AAEdC,IAAAA,YAAY,EAAEC,QAAQ,CAACC,MAAT,CAAgB;AAACC,MAAAA,GAAG,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE;AAAlB,KAAhB,CAFA;AAGdC,IAAAA,YAAY,EAAE;AAHA,GALe;AAU/BV,EAAAA,KAAK,kCACAC,UAAU,CAACU,kBADX;AAEHC,IAAAA,UAAU,EAAE;AAFT;AAV0B,CAAlB,CAAf","sourcesContent":["import React, {useRef, useState, useEffect} from 'react';\r\nimport Carousel, {ParallaxImage} from 'react-native-snap-carousel'; \r\nimport {\r\n  View, \r\n  Dimensions,\r\n  StyleSheet, \r\n  Platform,\r\n} from 'react-native';\r\n\r\nconst ENTRIES1 = [\r\n  {  \r\n    illustration: 'https://png.pngtree.com/png-vector/20200319/ourlarge/pngtree-cryptocurrency-mining-concept-with-people-working-mining-bitcoins-digital-currency-investment-png-image_2157968.jpg',\r\n  }, \r\n  {  \r\n    illustration: 'https://thumbs.dreamstime.com/b/print-213886566.jpg',\r\n  },\r\n  {  \r\n    illustration: 'https://i.imgur.com/KZsmUi2l.jpg',\r\n  },\r\n  {  \r\n    illustration: 'https://i.imgur.com/2nCt3Sbl.jpg',\r\n  },\r\n];\r\nconst {width: screenWidth} = Dimensions.get('window');\r\n\r\nconst MyCarousel = props => {\r\n  const [entries, setEntries] = useState([]);\r\n  const carouselRef = useRef(null);\r\n\r\n  const goForward = () => {\r\n    carouselRef.current.snapToNext();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEntries(ENTRIES1);\r\n  }, []);\r\n\r\n  const renderItem = ({item, index}, parallaxProps) => {\r\n    return (\r\n      <View style={styles.item}>\r\n        <ParallaxImage\r\n          source={{uri: item.illustration}}\r\n          containerStyle={styles.imageContainer}\r\n          style={styles.image}\r\n          parallaxFactor={0.4}\r\n          {...parallaxProps}\r\n        /> \r\n      </View>\r\n    );\r\n  };\r\n\r\n  return ( \r\n      <Carousel \r\n        ref={carouselRef}\r\n        sliderWidth={screenWidth}\r\n        sliderHeight={150}\r\n        itemWidth={screenWidth - 30}\r\n        data={entries} \r\n        loop={true}\r\n        renderItem={renderItem}\r\n        hasParallaxImages={true}\r\n      /> \r\n  );\r\n};\r\n\r\nexport default MyCarousel;\r\n\r\nconst styles = StyleSheet.create({ \r\n  item: {\r\n    width: screenWidth - 30,\r\n    height: 150,\r\n  },\r\n  imageContainer: {\r\n    flex: 1,\r\n    marginBottom: Platform.select({ios: 0, android: 1}), // Prevent a random Android rendering issue\r\n    borderRadius: 20,\r\n  },\r\n  image: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    resizeMode: 'cover',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}