{"ast":null,"code":"import { useState, useEffect, useMemo, useContext } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useUserActions } from \"../hook/useUserActionsContext\";\nimport { UserContext } from \"../screens/UserConfirm/Context\";\nimport RootScreen from \"../screens/UserConfirm/RootScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport Tabar from \"../components/Tabar\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar HandleScreen = function HandleScreen() {\n  var _useContext = useContext(UserContext),\n      userToken = _useContext.userToken,\n      isLoading = _useContext.isLoading;\n\n  var _useUserActions = useUserActions(),\n      checkUserLogin = _useUserActions.checkUserLogin,\n      login = _useUserActions.login;\n\n  useEffect(function () {}, []);\n  console.log(userToken);\n  return _jsx(_Fragment, {\n    children: checkUserLogin !== null ? _jsx(Tabar, {}) : _jsx(NavigationContainer, {\n      children: _jsx(RootScreen, {})\n    })\n  });\n};\n\nexport default HandleScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["D:/Lukim/screens/HandleScreen.js"],"names":["useState","useEffect","useMemo","useContext","NavigationContainer","useUserActions","UserContext","RootScreen","HomeScreen","Tabar","React","HandleScreen","userToken","isLoading","checkUserLogin","login","console","log","styles","StyleSheet","create"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA6BC,OAA7B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SACEC,mBADF,QAEO,0BAFP;;;;AAIA,SAASC,cAAT;AACA,SAASC,WAAT;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,oBAAgCR,UAAU,CAACG,WAAD,CAA1C;AAAA,MAAQM,SAAR,eAAQA,SAAR;AAAA,MAAkBC,SAAlB,eAAkBA,SAAlB;;AACF,wBAAiCR,cAAc,EAA/C;AAAA,MAAQS,cAAR,mBAAQA,cAAR;AAAA,MAAuBC,KAAvB,mBAAuBA,KAAvB;;AAEAd,EAAAA,SAAS,CAAC,YAAM,CAIf,CAJQ,EAIN,EAJM,CAAT;AAMAe,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAQA,SACE;AAAA,cACIE,cAAc,KAAK,IAAnB,GACE,KAAC,KAAD,KADF,GAIA,KAAC,mBAAD;AAAA,gBACA,KAAC,UAAD;AADA;AALJ,IADF;AAaD,CA/BD;;AAiCA,eAAeH,YAAf;AAEA,IAAMO,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import { useState, useEffect,useMemo,useContext } from 'react'\r\nimport { \r\n  NavigationContainer,  \r\n} from '@react-navigation/native';\r\nimport { View,StyleSheet,ActivityIndicator } from 'react-native';\r\nimport { useUserActions } from '../hook/useUserActionsContext';  \r\nimport { UserContext } from '../screens/UserConfirm/Context'\r\nimport RootScreen from '../screens/UserConfirm/RootScreen';\r\nimport HomeScreen from '../screens/HomeScreen'\r\nimport Tabar from \"../components/Tabar\";\r\nimport React from 'react';\r\n\r\nconst HandleScreen = () => {\r\n    const { userToken,isLoading } = useContext(UserContext)\r\n  const { checkUserLogin,login } = useUserActions()\r\n  \r\n  useEffect(() => {\r\n    // setTimeout(async() => {\r\n    //   checkUserLogin()\r\n    // }, 1000); \r\n  }, []);\r\n\r\n  console.log(userToken)\r\n    // if( true ) {\r\n    //     return(\r\n    //       <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n    //         <ActivityIndicator size=\"large\"  color=\"#1b242d\"/>\r\n    //       </View>\r\n    //     );\r\n    //   }\r\n  return (\r\n    <>\r\n      { checkUserLogin !== null ? (\r\n          <Tabar />\r\n      )\r\n      :\r\n        <NavigationContainer >\r\n        <RootScreen/> \r\n      </NavigationContainer>\r\n    }\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HandleScreen;\r\n\r\nconst styles = StyleSheet.create({});\r\n"]},"metadata":{},"sourceType":"module"}