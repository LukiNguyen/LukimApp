{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useMemo, useReducer } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport UserProvider from \"./screens/UserConfirm/Context\";\nimport { useUserActions } from \"./hook/useUserActionsContext\";\nimport RootScreen from \"./screens/UserConfirm/RootScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Tabar from \"./components/Tabar\";\nimport HandleScreen from \"./screens/HandleScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useUserActions = useUserActions(),\n      checkUserLogin = _useUserActions.checkUserLogin,\n      login = _useUserActions.login;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  useEffect(function () {\n    console.log(login);\n  }, []);\n  return _jsx(UserProvider, {\n    children: _jsx(HandleScreen, {})\n  });\n}","map":{"version":3,"sources":["D:/Lukim/App.js"],"names":["useState","useEffect","useMemo","useReducer","NavigationContainer","UserProvider","useUserActions","RootScreen","HomeScreen","Tabar","HandleScreen","App","checkUserLogin","login","isLoading","setIsLoading","userToken","setUserToken","console","log"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA6BC,OAA7B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SACEC,mBADF,QAEO,0BAFP;;;;AAIA,OAAOC,YAAP;AACA,SAASC,cAAT;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;AACA,OAAOC,YAAP;;AACA,eAAe,SAASC,GAAT,GAAe;AAE5B,wBAAiCL,cAAc,EAA/C;AAAA,MAAQM,cAAR,mBAAQA,cAAR;AAAA,MAAuBC,KAAvB,mBAAuBA,KAAvB;;AAGA,kBAAiCb,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOc,SAAP;AAAA,MAAiBC,YAAjB;;AACA,mBAAiCf,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOgB,SAAP;AAAA,MAAiBC,YAAjB;;AAEAhB,EAAAA,SAAS,CAAC,YAAM;AAIdiB,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACD,GALQ,EAKN,EALM,CAAT;AAOA,SACE,KAAC,YAAD;AAAA,cAEE,KAAC,YAAD;AAFF,IADF;AAMD","sourcesContent":["import { useState, useEffect,useMemo,useReducer } from 'react'\nimport { \n  NavigationContainer,  \n} from '@react-navigation/native';\nimport { View,StyleSheet,ActivityIndicator } from 'react-native';\nimport UserProvider from './screens/UserConfirm/Context';  \nimport { useUserActions } from './hook/useUserActionsContext'; \nimport RootScreen from './screens/UserConfirm/RootScreen';\nimport HomeScreen from './screens/HomeScreen'\nimport Tabar from \"./components/Tabar\";\nimport HandleScreen from './screens/HandleScreen';\nexport default function App() {\n  \n  const { checkUserLogin,login } = useUserActions()\n  \n\n  const [isLoading,setIsLoading] = useState(true)\n  const [userToken,setUserToken] = useState(null) \n  \n  useEffect(() => {\n    // setTimeout(async() => {\n    //   checkUserLogin()\n    // }, 1000);\n    console.log(login)\n  }, []);\n  \n  return (  \n    <UserProvider>\n      \n      <HandleScreen/>\n    </UserProvider>\n  );\n} \n\n"]},"metadata":{},"sourceType":"module"}