{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport DetailsScreen from \"../screens/DetailsScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"Home\";\nvar detailsName = \"Details\";\nvar settingsName = \"Settings\";\nvar Tab = createBottomTabNavigator();\n\nfunction MainContainer() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: homeName,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n\n            if (rn === homeName) {\n              iconName = focused ? 'home' : 'home-outline';\n            } else if (rn === detailsName) {\n              iconName = focused ? 'user' : 'list-outline';\n            } else if (rn === settingsName) {\n              iconName = focused ? 'settings' : 'settings-outline';\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      screenOptions: {\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'grey',\n        tabBarStyle: {\n          paddingBottom: 10,\n          fontSize: 10\n        },\n        style: {\n          padding: 10,\n          height: 70\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: homeName,\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: detailsName,\n        component: DetailsScreen\n      }), _jsx(Tab.Screen, {\n        name: settingsName,\n        component: SettingsScreen\n      })]\n    })\n  });\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["D:/Lukim/components/Tabar.js"],"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","HomeScreen","DetailsScreen","SettingsScreen","homeName","detailsName","settingsName","Tab","MainContainer","route","tabBarIcon","focused","color","size","iconName","rn","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","paddingBottom","fontSize","style","padding","height"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AAGA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,cAAP;;;AAGA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,WAAW,GAAG,SAApB;AACA,IAAMC,YAAY,GAAG,UAArB;AAEA,IAAMC,GAAG,GAAGR,wBAAwB,EAApC;;AAEA,SAASS,aAAT,GAAyB;AACvB,SACE,KAAC,mBAAD;AAAA,cACE,MAAC,GAAD,CAAK,SAAL;AACE,MAAA,gBAAgB,EAAEJ,QADpB;AAEE,MAAA,aAAa,EAAE;AAAA,YAAGK,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC7BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;AACxC,gBAAIC,QAAJ;AACA,gBAAIC,EAAE,GAAGN,KAAK,CAACO,IAAf;;AAEA,gBAAID,EAAE,KAAKX,QAAX,EAAqB;AACnBU,cAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AAED,aAHD,MAGO,IAAII,EAAE,KAAKV,WAAX,EAAwB;AAC7BS,cAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AAED,aAHM,MAGA,IAAII,EAAE,KAAKT,YAAX,EAAyB;AAC9BQ,cAAAA,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,kBAAlC;AACD;;AAGD,mBAAO,KAAC,QAAD;AAAU,cAAA,IAAI,EAAEG,QAAhB;AAA0B,cAAA,IAAI,EAAED,IAAhC;AAAsC,cAAA,KAAK,EAAED;AAA7C,cAAP;AACD;AAjB4B,SAAhB;AAAA,OAFjB;AAqBE,MAAA,aAAa,EAAE;AACbK,QAAAA,qBAAqB,EAAE,QADV;AAEbC,QAAAA,uBAAuB,EAAE,MAFZ;AAGbC,QAAAA,WAAW,EAAE;AAAEC,UAAAA,aAAa,EAAE,EAAjB;AAAqBC,UAAAA,QAAQ,EAAE;AAA/B,SAHA;AAIbC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,EAAX;AAAeC,UAAAA,MAAM,EAAE;AAAvB;AAJM,OArBjB;AAAA,iBA4BE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAEpB,QAAlB;AAA4B,QAAA,SAAS,EAAEH;AAAvC,QA5BF,EA6BE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAEI,WAAlB;AAA+B,QAAA,SAAS,EAAEH;AAA1C,QA7BF,EA8BE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAEI,YAAlB;AAAgC,QAAA,SAAS,EAAEH;AAA3C,QA9BF;AAAA;AADF,IADF;AAqCD;;AAED,eAAeK,aAAf","sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\n// Screens\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport DetailsScreen from '../screens/DetailsScreen';\r\nimport SettingsScreen from '../screens/SettingsScreen';\r\n\r\n//Screen names\r\nconst homeName = \"Home\";\r\nconst detailsName = \"Details\";\r\nconst settingsName = \"Settings\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MainContainer() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        initialRouteName={homeName}\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            let rn = route.name;\r\n\r\n            if (rn === homeName) {\r\n              iconName = focused ? 'home' : 'home-outline';\r\n\r\n            } else if (rn === detailsName) {\r\n              iconName = focused ? 'user' : 'list-outline';\r\n\r\n            } else if (rn === settingsName) {\r\n              iconName = focused ? 'settings' : 'settings-outline';\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        screenOptions={{\r\n          tabBarActiveTintColor: 'tomato',\r\n          tabBarInactiveTintColor: 'grey',\r\n          tabBarStyle: { paddingBottom: 10, fontSize: 10 },\r\n          style: { padding: 10, height: 70}\r\n        }}>\r\n\r\n        <Tab.Screen name={homeName} component={HomeScreen} />\r\n        <Tab.Screen name={detailsName} component={DetailsScreen} />\r\n        <Tab.Screen name={settingsName} component={SettingsScreen} />\r\n\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default MainContainer;"]},"metadata":{},"sourceType":"module"}