{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar SwitchCustom = function SwitchCustom() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Switch, {\n      trackColor: {\n        false: \"#767577\",\n        true: \"#81b0ff\"\n      },\n      thumbColor: isEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n      ios_backgroundColor: \"#3e3e3e\",\n      onValueChange: toggleSwitch,\n      value: isEnabled\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default SwitchCustom;","map":{"version":3,"sources":["D:/Lukim/components/Switch.js"],"names":["React","useState","SwitchCustom","isEnabled","setIsEnabled","toggleSwitch","previousState","styles","container","false","true","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,kBAAkCD,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOE,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMD,YAAY,CAAC,UAAAE,aAAa;AAAA,aAAI,CAACA,aAAL;AAAA,KAAd,CAAlB;AAAA,GAArB;;AAEA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,MAAD;AACE,MAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OADd;AAEE,MAAA,UAAU,EAAEP,SAAS,GAAG,SAAH,GAAe,SAFtC;AAGE,MAAA,mBAAmB,EAAC,SAHtB;AAIE,MAAA,aAAa,EAAEE,YAJjB;AAKE,MAAA,KAAK,EAAEF;AALT;AADF,IADF;AAWD,CAfD;;AAiBA,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf;AAQA,eAAeb,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Switch, StyleSheet } from \"react-native\";\r\n\r\nconst SwitchCustom = () => {\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n  const toggleSwitch = () => setIsEnabled(previousState => !previousState);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Switch\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleSwitch}\r\n        value={isEnabled}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n});\r\n\r\nexport default SwitchCustom;"]},"metadata":{},"sourceType":"module"}