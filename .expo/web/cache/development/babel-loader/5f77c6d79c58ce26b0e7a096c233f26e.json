{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport UserProvider from \"../screens/UserConfirm/Context\";\nimport { useUserActions } from \"../hook/useUserActionsContext\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar HandleScreen = function HandleScreen() {\n  var _useUserActions = useUserActions(),\n      checkUserLogin = _useUserActions.checkUserLogin,\n      login = _useUserActions.login;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  useEffect(function () {\n    console.log(login);\n  }, []);\n\n  if (true) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#1b242d\"\n      })\n    });\n  }\n\n  return _jsx(_Fragment, {\n    children: checkUserLogin !== null ? _jsx(Tabar, {}) : _jsx(NavigationContainer, {\n      children: _jsx(RootScreen, {})\n    })\n  });\n};\n\nexport default HandleScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["D:/Lukim/screens/HandleScreen.js"],"names":["UserProvider","useUserActions","React","HandleScreen","checkUserLogin","login","useState","isLoading","setIsLoading","userToken","setUserToken","useEffect","console","log","flex","justifyContent","alignItems","styles","StyleSheet","create"],"mappings":";;;;AACA,OAAOA,YAAP;AACA,SAASC,cAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEzB,wBAAiCF,cAAc,EAA/C;AAAA,MAAQG,cAAR,mBAAQA,cAAR;AAAA,MAAuBC,KAAvB,mBAAuBA,KAAvB;;AAGA,kBAAiCC,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAiBC,YAAjB;;AACA,mBAAiCF,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAiBC,YAAjB;;AAEAC,EAAAA,SAAS,CAAC,YAAM;AAIdC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,GALQ,EAKN,EALM,CAAT;;AAME,MAAI,IAAJ,EAAW;AACP,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACS,QAAAA,IAAI,EAAC,CAAN;AAAQC,QAAAA,cAAc,EAAC,QAAvB;AAAgCC,QAAAA,UAAU,EAAC;AAA3C,OAAb;AAAA,gBACE,KAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAiC,QAAA,KAAK,EAAC;AAAvC;AADF,MADF;AAKD;;AACL,SACE;AAAA,cACIZ,cAAc,KAAK,IAAnB,GACE,KAAC,KAAD,KADF,GAIA,KAAC,mBAAD;AAAA,gBACA,KAAC,UAAD;AADA;AALJ,IADF;AAaD,CAlCD;;AAoCA,eAAeD,YAAf;AAEA,IAAMc,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\r\nimport UserProvider from '../screens/UserConfirm/Context';  \r\nimport { useUserActions } from '../hook/useUserActionsContext'; \r\nimport React from 'react';\r\n\r\nconst HandleScreen = () => {\r\n    \r\n  const { checkUserLogin,login } = useUserActions()\r\n  \r\n\r\n  const [isLoading,setIsLoading] = useState(true)\r\n  const [userToken,setUserToken] = useState(null) \r\n  \r\n  useEffect(() => {\r\n    // setTimeout(async() => {\r\n    //   checkUserLogin()\r\n    // }, 1000);\r\n    console.log(login)\r\n  }, []);\r\n    if( true ) {\r\n        return(\r\n          <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n            <ActivityIndicator size=\"large\"  color=\"#1b242d\"/>\r\n          </View>\r\n        );\r\n      }\r\n  return (\r\n    <>\r\n      { checkUserLogin !== null ? (\r\n          <Tabar />\r\n      )\r\n      :\r\n        <NavigationContainer >\r\n        <RootScreen/> \r\n      </NavigationContainer>\r\n    }\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HandleScreen;\r\n\r\nconst styles = StyleSheet.create({});\r\n"]},"metadata":{},"sourceType":"module"}