{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect, useMemo, useReducer } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AuthContext } from \"./screens/UserConfirm/Context\";\nimport RootScreen from \"./screens/UserConfirm/RootScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Tabar from \"./components/Tabar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  var _useReducer = useReducer(loginReducer, initialLoginState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      loginState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn(foundUser) {\n        var userToken, userName;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setUserToken('fgkj');\n                setIsLoading(false);\n                userToken = String(foundUser[0].userToken);\n                userName = foundUser[0].username;\n                _context.prev = 4;\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userToken));\n\n              case 7:\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](4);\n                console.log(_context.t0);\n\n              case 12:\n                dispatch({\n                  type: 'LOGIN',\n                  id: userName,\n                  token: userToken\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[4, 9]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setUserToken(null);\n                setIsLoading(false);\n                _context2.prev = 2;\n                _context2.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 5:\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.log(_context2.t0);\n\n              case 10:\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      },\n      signUp: function signUp() {\n        setUserToken('fgkj');\n        setIsLoading(false);\n      },\n      toggleTheme: function toggleTheme() {\n        setIsDarkTheme(function (isDarkTheme) {\n          return !isDarkTheme;\n        });\n      }\n    };\n  }, []);\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userToken = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 4:\n              userToken = _context3.sent;\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 10:\n              dispatch({\n                type: 'RETRIEVE_TOKEN',\n                token: userToken\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    }, 1000);\n  }, []);\n\n  if (loginState.isLoading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#1b242d\"\n      })\n    });\n  }\n\n  return _jsx(AuthContext.Provider, {\n    value: authContext,\n    children: loginState.userToken !== null ? _jsx(Tabar, {}) : _jsx(NavigationContainer, {\n      children: _jsx(RootScreen, {})\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  margintabbar: {}\n});","map":{"version":3,"sources":["D:/Lukim/App.js"],"names":["useState","useEffect","useMemo","useReducer","NavigationContainer","AuthContext","RootScreen","HomeScreen","Tabar","App","isLoading","setIsLoading","userToken","setUserToken","loginReducer","initialLoginState","loginState","dispatch","authContext","signIn","foundUser","String","userName","username","AsyncStorage","setItem","console","log","type","id","token","signOut","removeItem","signUp","toggleTheme","setIsDarkTheme","isDarkTheme","setTimeout","getItem","flex","justifyContent","alignItems","styles","StyleSheet","create","margintabbar"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA6BC,OAA7B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SACEC,mBADF,QAEO,0BAFP;;;;AAIA,SAASC,WAAT;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;;AACA,eAAe,SAASC,GAAT,GAAe;AAK5B,kBAAiCT,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOU,SAAP;AAAA,MAAiBC,YAAjB;;AACA,mBAAiCX,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOY,SAAP;AAAA,MAAiBC,YAAjB;;AAEA,oBAAgCV,UAAU,CAACW,YAAD,EAAeC,iBAAf,CAA1C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,QAAnB;;AAEC,MAAMC,WAAW,GAAIhB,OAAO,CAAC;AAAA,WAAO;AACnCiB,MAAAA,MAAM,EAAE,gBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACNP,gBAAAA,YAAY,CAAC,MAAD,CAAZ;AACAF,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACMC,gBAAAA,SAHA,GAGYS,MAAM,CAACD,SAAS,CAAC,CAAD,CAAT,CAAaR,SAAd,CAHlB;AAIAU,gBAAAA,QAJA,GAIWF,SAAS,CAAC,CAAD,CAAT,CAAaG,QAJxB;AAAA;AAAA;AAAA,iDAOEC,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCb,SAAlC,CAPF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASJc,gBAAAA,OAAO,CAACC,GAAR;;AATI;AAYNV,gBAAAA,QAAQ,CAAC;AAAEW,kBAAAA,IAAI,EAAE,OAAR;AAAiBC,kBAAAA,EAAE,EAAEP,QAArB;AAA+BQ,kBAAAA,KAAK,EAAElB;AAAtC,iBAAD,CAAR;;AAZM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAD2B;AAenCmB,MAAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AACPlB,gBAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AAFO;AAAA;AAAA,iDAICa,YAAY,CAACQ,UAAb,CAAwB,WAAxB,CAJD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMLN,gBAAAA,OAAO,CAACC,GAAR;;AANK;AAQPV,gBAAAA,QAAQ,CAAC;AAAEW,kBAAAA,IAAI,EAAE;AAAR,iBAAD,CAAR;;AARO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAf0B;AAyBnCK,MAAAA,MAAM,EAAE,kBAAM;AACZpB,QAAAA,YAAY,CAAC,MAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OA5BkC;AA6BnCuB,MAAAA,WAAW,EAAE,uBAAM;AACjBC,QAAAA,cAAc,CAAE,UAAAC,WAAW;AAAA,iBAAI,CAACA,WAAL;AAAA,SAAb,CAAd;AACD;AA/BkC,KAAP;AAAA,GAAD,EAgCzB,EAhCyB,CAA5B;AAiCDnC,EAAAA,SAAS,CAAC,YAAM;AACdoC,IAAAA,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGTzB,cAAAA,SAAS,GAAG,IAAZ;AAHS;AAAA;AAAA,+CAKWY,YAAY,CAACc,OAAb,CAAqB,WAArB,CALX;;AAAA;AAKP1B,cAAAA,SALO;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOPc,cAAAA,OAAO,CAACC,GAAR;;AAPO;AAUTV,cAAAA,QAAQ,CAAC;AAAEW,gBAAAA,IAAI,EAAE,gBAAR;AAA0BE,gBAAAA,KAAK,EAAElB;AAAjC,eAAD,CAAR;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,EAWP,IAXO,CAAV;AAYD,GAbQ,EAaN,EAbM,CAAT;;AAcA,MAAII,UAAU,CAACN,SAAf,EAA2B;AACzB,WACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAC6B,QAAAA,IAAI,EAAC,CAAN;AAAQC,QAAAA,cAAc,EAAC,QAAvB;AAAgCC,QAAAA,UAAU,EAAC;AAA3C,OAAb;AAAA,gBACE,KAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAiC,QAAA,KAAK,EAAC;AAAvC;AADF,MADF;AAKD;;AACD,SACE,KAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEvB,WAA7B;AAAA,cAEIF,UAAU,CAACJ,SAAX,KAAyB,IAAzB,GACE,KAAC,KAAD,KADF,GAIA,KAAC,mBAAD;AAAA,gBACA,KAAC,UAAD;AADA;AANJ,IADF;AAaD;AACD,IAAM8B,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,YAAY,EAAE;AADiB,CAAlB,CAAf","sourcesContent":["import { useState, useEffect,useMemo,useReducer } from 'react'\nimport { \n  NavigationContainer,  \n} from '@react-navigation/native';\nimport { View,StyleSheet,ActivityIndicator } from 'react-native';\nimport { AuthContext } from './screens/UserConfirm/Context';\nimport RootScreen from './screens/UserConfirm/RootScreen';\nimport HomeScreen from './screens/HomeScreen'\nimport Tabar from \"./components/Tabar\";\nexport default function App() {\n  \n\n  \n\n  const [isLoading,setIsLoading] = useState(true)\n  const [userToken,setUserToken] = useState(null) \n\n  const [loginState, dispatch] =  useReducer(loginReducer, initialLoginState);\n\n   const authContext =  useMemo(() => ({\n    signIn: async(foundUser) => {\n      setUserToken('fgkj');\n      setIsLoading(false);\n      const userToken = String(foundUser[0].userToken);\n      const userName = foundUser[0].username;\n      \n      try {\n        await AsyncStorage.setItem('userToken', userToken);\n      } catch(e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'LOGIN', id: userName, token: userToken });\n    },\n    signOut: async() => {\n      setUserToken(null);\n      setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: 'LOGOUT' });\n    },\n    signUp: () => {\n      setUserToken('fgkj');\n      setIsLoading(false);\n    },\n    toggleTheme: () => {\n      setIsDarkTheme( isDarkTheme => !isDarkTheme );\n    }\n  }), []);\n  useEffect(() => {\n    setTimeout(async() => {\n      // setIsLoading(false);\n      let userToken;\n      userToken = null;\n      try {\n        userToken = await AsyncStorage.getItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'RETRIEVE_TOKEN', token: userToken });\n    }, 1000);\n  }, []);\n  if( loginState.isLoading ) {\n    return(\n      <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n        <ActivityIndicator size=\"large\"  color=\"#1b242d\"/>\n      </View>\n    );\n  }\n  return (  \n    <AuthContext.Provider value={authContext}>\n      \n      { loginState.userToken !== null ? (\n          <Tabar />\n      )\n    :\n        <NavigationContainer >\n        <RootScreen/> \n      </NavigationContainer>\n    }\n    </AuthContext.Provider>\n  );\n} \nconst styles = StyleSheet.create({ \n  margintabbar: { \n  }\n});\n"]},"metadata":{},"sourceType":"module"}