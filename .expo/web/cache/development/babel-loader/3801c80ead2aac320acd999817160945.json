{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\n\nvar Storage = function Storage(userInfor) {\n  return _regeneratorRuntime.async(function Storage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userInfor));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar data = ['lukim', 'kimei'];\n\nvar UserActions = function UserActions(prevState, action) {\n  switch (action.type) {\n    case 'RETRIEVE_TOKEN':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        userToken: prevState.token,\n        isLoading: false\n      });\n\n    case 'LOGIN':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        userName: prevState.userName,\n        userToken: prevState.userToken,\n        isLoading: false\n      });\n\n    case 'LOGOUT':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        userName: null,\n        userToken: null,\n        isLoading: false\n      });\n\n    case 'REGISTER':\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        userName: prevState.id,\n        userToken: prevState.token,\n        isLoading: false\n      });\n\n    case 'CHECK_USER_LOGIN':\n      (function _callee() {\n        var userToken;\n        return _regeneratorRuntime.async(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                userToken = null;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n              case 4:\n                userToken = _context2.sent;\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[1, 7]], Promise);\n      });\n\n      if (data.includes(JSON.stringify(userToken), 0)) {\n        alert(\"OK\");\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isLoading: false\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n      }\n\n    default:\n      return prevState;\n  }\n};\n\nexport { UserActions };","map":{"version":3,"sources":["D:/Lukim/actions/UserActions.js"],"names":["AsyncStorage","Storage","userInfor","setItem","console","log","data","UserActions","prevState","action","type","userToken","token","isLoading","userName","id","getItem","includes","JSON","stringify","alert"],"mappings":";;;;;;;SAASA,Y;;AACT,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFF,YAAY,CAACG,OAAb,CAAqB,WAArB,EAAkCD,SAAlC,CAFE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIRE,UAAAA,OAAO,CAACC,GAAR;;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAOA,IAAMC,IAAI,GAAG,CAAC,OAAD,EAAS,OAAT,CAAb;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAYC,MAAZ,EAAuB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AACI,6CACGF,SADH;AAEAG,QAAAA,SAAS,EAAEH,SAAS,CAACI,KAFrB;AAGAC,QAAAA,SAAS,EAAE;AAHX;;AAKJ,SAAK,OAAL;AACI,6CACGL,SADH;AAEAM,QAAAA,QAAQ,EAACN,SAAS,CAACM,QAFnB;AAGAH,QAAAA,SAAS,EAAEH,SAAS,CAACG,SAHrB;AAIAE,QAAAA,SAAS,EAAE;AAJX;;AAMJ,SAAK,QAAL;AACI,6CACGL,SADH;AAEAM,QAAAA,QAAQ,EAAE,IAFV;AAGAH,QAAAA,SAAS,EAAE,IAHX;AAIAE,QAAAA,SAAS,EAAE;AAJX;;AAMJ,SAAK,UAAL;AACI,6CACGL,SADH;AAEAM,QAAAA,QAAQ,EAAEN,SAAS,CAACO,EAFpB;AAGAJ,QAAAA,SAAS,EAAEH,SAAS,CAACI,KAHrB;AAIAC,QAAAA,SAAS,EAAE;AAJX;;AAMJ,SAAK,kBAAL;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACQF,gBAAAA,SADR,GACoB,IADpB;AAAA;AAAA;AAAA,iDAG0BX,YAAY,CAACgB,OAAb,CAAqB,WAArB,CAH1B;;AAAA;AAGQL,gBAAAA,SAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKQP,gBAAAA,OAAO,CAACC,GAAR;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQI,UAAGC,IAAI,CAACW,QAAL,CAAcC,IAAI,CAACC,SAAL,CAAeR,SAAf,CAAd,EAAyC,CAAzC,CAAH,EAAgD;AAE5CS,QAAAA,KAAK,CAAC,IAAD,CAAL;AACA,+CACOZ,SADP;AAEIK,UAAAA,SAAS,EAAE;AAFf;AAIH,OAPD,MAQK;AACD,+CACOL,SADP;AAEIM,UAAAA,QAAQ,EAAE,IAFd;AAGIH,UAAAA,SAAS,EAAE,IAHf;AAIIE,UAAAA,SAAS,EAAE;AAJf;AAMH;;AACL;AACI,aAAOL,SAAP;AAtDR;AAwDD,CAzDH;;AA2DA,SAAQD,WAAR","sourcesContent":["import { AsyncStorage } from 'react-native';\r\nconst Storage = async (userInfor) => {   \r\n    try {\r\n        await AsyncStorage.setItem('userToken', userInfor);\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n}\r\nconst data = ['lukim','kimei']\r\nconst UserActions = (prevState, action) => {\r\n    switch( action.type ) {\r\n        case 'RETRIEVE_TOKEN': \r\n            return {\r\n            ...prevState,\r\n            userToken: prevState.token,\r\n            isLoading: false,\r\n        };\r\n        case 'LOGIN':   \r\n            return {\r\n            ...prevState,\r\n            userName:prevState.userName,\r\n            userToken: prevState.userToken,\r\n            isLoading: false,\r\n        };\r\n        case 'LOGOUT': \r\n            return {\r\n            ...prevState,\r\n            userName: null,\r\n            userToken: null,\r\n            isLoading: false,\r\n        };\r\n        case 'REGISTER': \r\n            return {\r\n            ...prevState,\r\n            userName: prevState.id,\r\n            userToken: prevState.token,\r\n            isLoading: false,\r\n        };\r\n        case 'CHECK_USER_LOGIN': \r\n        async () => {\r\n            let userToken = null; \r\n            try {\r\n                userToken = await AsyncStorage.getItem('userToken');\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n            if(data.includes(JSON.stringify(userToken), 0)) {\r\n                \r\n                alert(\"OK\")\r\n                return {\r\n                    ...prevState, \r\n                    isLoading: false,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    ...prevState,\r\n                    userName: null,\r\n                    userToken: null,\r\n                    isLoading: false,\r\n                };\r\n            }\r\n        default:\r\n            return prevState\r\n    }\r\n  };\r\n\r\nexport {UserActions}"]},"metadata":{},"sourceType":"module"}