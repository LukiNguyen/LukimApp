{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar SwitchCustom = function SwitchCustom() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Switch, {\n      trackColor: {\n        true: '#7ab8e1',\n        false: Platform.OS == 'android' ? '#d3d3d3' : '#fbfbfb'\n      },\n      thumbColor: [Platform.OS == 'ios' ? '#FFFFFF' : item.status ? '#7ab8e1' : '#ffffff'],\n      ios_backgroundColor: \"#fbfbfb\",\n      style: [item.status ? inline_styles.switchEnableBorder : inline_styles.switchDisableBorder],\n      value: item.status,\n      onValueChange: function onValueChange() {\n        return _this.change_status(index);\n      }\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nvar inline_styles = StyleSheet.create({\n  switchEnableBorder: {\n    borderColor: '#6fa6d3',\n    borderWidth: 1\n  },\n  switchDisableBorder: {\n    borderColor: '#f2f2f2',\n    borderWidth: 1\n  }\n});\nexport default SwitchCustom;","map":{"version":3,"sources":["D:/Lukim/components/Switch.js"],"names":["React","useState","SwitchCustom","isEnabled","setIsEnabled","toggleSwitch","previousState","styles","container","true","false","Platform","OS","item","status","inline_styles","switchEnableBorder","switchDisableBorder","change_status","index","StyleSheet","create","flex","alignItems","justifyContent","borderColor","borderWidth"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,kBAAkCD,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOE,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMD,YAAY,CAAC,UAAAE,aAAa;AAAA,aAAI,CAACA,aAAL;AAAA,KAAd,CAAlB;AAAA,GAArB;;AAEA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,MAAD;AACN,MAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAEC,QAAQ,CAACC,EAAT,IAAa,SAAb,GAAuB,SAAvB,GAAiC;AAA3D,OADN;AAEN,MAAA,UAAU,EAAE,CAACD,QAAQ,CAACC,EAAT,IAAa,KAAb,GAAmB,SAAnB,GAA8BC,IAAI,CAACC,MAAL,GAAa,SAAb,GAAuB,SAAtD,CAFN;AAGN,MAAA,mBAAmB,EAAC,SAHd;AAIN,MAAA,KAAK,EAAE,CAACD,IAAI,CAACC,MAAL,GAAaC,aAAa,CAACC,kBAA3B,GAA8CD,aAAa,CAACE,mBAA7D,CAJD;AAKN,MAAA,KAAK,EAAEJ,IAAI,CAACC,MALN;AAMN,MAAA,aAAa,EAAE;AAAA,eAAK,KAAI,CAACI,aAAL,CAAmBC,KAAnB,CAAL;AAAA;AANT;AADF,IADF;AAYD,CAhBD;;AAkBA,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf;AAOA,IAAMT,aAAa,GAAGK,UAAU,CAACC,MAAX,CAAkB;AACpCL,EAAAA,kBAAkB,EAAE;AACpBS,IAAAA,WAAW,EAAE,SADO;AAEpBC,IAAAA,WAAW,EAAE;AAFO,GADgB;AAKpCT,EAAAA,mBAAmB,EAAE;AACrBQ,IAAAA,WAAW,EAAE,SADQ;AAErBC,IAAAA,WAAW,EAAE;AAFQ;AALe,CAAlB,CAAtB;AAQA,eAAexB,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Switch, StyleSheet ,Platform} from \"react-native\";\r\n\r\nconst SwitchCustom = () => {\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n  const toggleSwitch = () => setIsEnabled(previousState => !previousState);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Switch\r\ntrackColor={{ true: '#7ab8e1', false: Platform.OS=='android'?'#d3d3d3':'#fbfbfb'  }}\r\nthumbColor={[Platform.OS=='ios'?'#FFFFFF':(item.status ?'#7ab8e1':'#ffffff')]}\r\nios_backgroundColor=\"#fbfbfb\"\r\nstyle={[item.status ?inline_styles.switchEnableBorder:inline_styles.switchDisableBorder]}\r\nvalue={item.status}\r\nonValueChange={() =>this.change_status(index)            }\r\n/>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n});\r\nconst inline_styles = StyleSheet.create({\r\n    switchEnableBorder: {\r\n    borderColor: '#6fa6d3',\r\n    borderWidth: 1},\r\n    \r\n    switchDisableBorder: {\r\n    borderColor: '#f2f2f2',\r\n    borderWidth: 1,  },});\r\nexport default SwitchCustom;"]},"metadata":{},"sourceType":"module"}