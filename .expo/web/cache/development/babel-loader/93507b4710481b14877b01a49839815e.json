{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from \"@expo/vector-icons/Feather\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport DetailsScreen from \"../screens/DetailsScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"Home\";\nvar detailsName = \"Details\";\nvar settingsName = \"Settings\";\nvar Tab = createBottomTabNavigator();\n\nfunction MainContainer() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'grey',\n          tabBarStyle: {\n            paddingBottom: 10,\n            fontSize: 10\n          },\n          style: {\n            padding: 10,\n            height: 70\n          },\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n\n            if (rn === homeName) {\n              iconName = focused ? 'home' : 'home';\n            } else if (rn === detailsName) {\n              iconName = focused ? 'user' : 'user';\n            } else if (rn === settingsName) {\n              iconName = focused ? 'settings' : 'settings';\n            }\n\n            return _jsx(Icon, {\n              name: iconName,\n              size: 23,\n              color: color\n            });\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: homeName,\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: detailsName,\n        component: DetailsScreen\n      }), _jsx(Tab.Screen, {\n        name: settingsName,\n        component: SettingsScreen\n      })]\n    })\n  });\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["D:/Lukim/components/Tabar.js"],"names":["React","NavigationContainer","createBottomTabNavigator","Icon","HomeScreen","DetailsScreen","SettingsScreen","homeName","detailsName","settingsName","Tab","MainContainer","route","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","paddingBottom","fontSize","style","padding","height","tabBarIcon","focused","color","size","iconName","rn","name"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,IAAP;AAGA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,cAAP;;;AAGA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,WAAW,GAAG,SAApB;AACA,IAAMC,YAAY,GAAG,UAArB;AAEA,IAAMC,GAAG,GAAGR,wBAAwB,EAApC;;AAEA,SAASS,aAAT,GAAyB;AACvB,SACE,KAAC,mBAAD;AAAA,cACE,MAAC,GAAD,CAAK,SAAL;AACE,MAAA,aAAa,EAAE;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC7BC,UAAAA,qBAAqB,EAAE,QADM;AAE7BC,UAAAA,uBAAuB,EAAE,MAFI;AAG7BC,UAAAA,WAAW,EAAE;AAAEC,YAAAA,aAAa,EAAE,EAAjB;AAAqBC,YAAAA,QAAQ,EAAE;AAA/B,WAHgB;AAI7BC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE,EAAX;AAAeC,YAAAA,MAAM,EAAE;AAAvB,WAJsB;AAK7BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;AACxC,gBAAIC,QAAJ;AACA,gBAAIC,EAAE,GAAGd,KAAK,CAACe,IAAf;;AAEA,gBAAID,EAAE,KAAKnB,QAAX,EAAqB;AACnBkB,cAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,MAA9B;AAED,aAHD,MAGO,IAAII,EAAE,KAAKlB,WAAX,EAAwB;AAC7BiB,cAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,MAA9B;AAED,aAHM,MAGA,IAAII,EAAE,KAAKjB,YAAX,EAAyB;AAC9BgB,cAAAA,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,UAAlC;AACD;;AAGD,mBAAO,KAAC,IAAD;AAAM,cAAA,IAAI,EAAEG,QAAZ;AAAsB,cAAA,IAAI,EAAE,EAA5B;AAAgC,cAAA,KAAK,EAAEF;AAAvC,cAAP;AACD;AArB4B,SAAhB;AAAA,OADjB;AAAA,iBAyBE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAEhB,QAAlB;AAA4B,QAAA,SAAS,EAAEH;AAAvC,QAzBF,EA0BE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAEI,WAAlB;AAA+B,QAAA,SAAS,EAAEH;AAA1C,QA1BF,EA2BE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAEI,YAAlB;AAAgC,QAAA,SAAS,EAAEH;AAA3C,QA3BF;AAAA;AADF,IADF;AAkCD;;AAED,eAAeK,aAAf","sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Icon from 'react-native-vector-icons/Feather';\r\n\r\n// Screens\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport DetailsScreen from '../screens/DetailsScreen';\r\nimport SettingsScreen from '../screens/SettingsScreen';\r\n\r\n//Screen names\r\nconst homeName = \"Home\";\r\nconst detailsName = \"Details\";\r\nconst settingsName = \"Settings\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MainContainer() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator \r\n        screenOptions={({ route }) => ({\r\n          tabBarActiveTintColor: 'tomato',\r\n          tabBarInactiveTintColor: 'grey',\r\n          tabBarStyle: { paddingBottom: 10, fontSize: 10 },\r\n          style: { padding: 10, height: 70},\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            let rn = route.name;\r\n\r\n            if (rn === homeName) {\r\n              iconName = focused ? 'home' : 'home';\r\n\r\n            } else if (rn === detailsName) {\r\n              iconName = focused ? 'user' : 'user';\r\n\r\n            } else if (rn === settingsName) {\r\n              iconName = focused ? 'settings' : 'settings';\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Icon name={iconName} size={23} color={color} />;\r\n          },\r\n        })} >\r\n\r\n        <Tab.Screen name={homeName} component={HomeScreen} />\r\n        <Tab.Screen name={detailsName} component={DetailsScreen} />\r\n        <Tab.Screen name={settingsName} component={SettingsScreen} />\r\n\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default MainContainer;"]},"metadata":{},"sourceType":"module"}